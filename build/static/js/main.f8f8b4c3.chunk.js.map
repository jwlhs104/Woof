{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","count","setCount","show","setShow","useEffect","fetch","then","response","json","data","className","id","onClick","dog","console","log","JSON","stringify","method","headers","body","onTransitionEnd","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA+CeA,MA5Cf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAQA,OAPAC,qBAAU,WACRC,MAAM,gBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJR,EAASQ,EAAK,GAAL,YAEV,IAED,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,GAAG,YAAR,SAAqBX,IACrB,qBAAKW,GAAG,YAAYC,QAClB,WAEEX,EAASD,EAAM,GACfG,GAAQ,GAER,IAAMU,EAAM,CAAC,KAAO,OAAQ,MAAQ,GACpCC,QAAQC,IAAIC,KAAKC,UAAUJ,IAC3BR,MAAM,OAAQ,CACZa,OAAQ,OACRC,QAAS,CAAE,eAAgB,aAC3BC,KAAMJ,KAAKC,UAAUJ,MAX3B,SAeE,qBACEH,UAAWR,EAAO,OAAS,YAC3BmB,gBAAiB,WACflB,GAAQ,IAHZ,2BCpBKmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f8f8b4c3.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(false);\n  useEffect(()=>{\n    fetch('/leaderboard')\n    .then(response => response.json())\n    .then(data => {\n      setCount(data[0]['count'])\n    })\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"WoofCount\">{count}</div>\n        <div id=\"WoofClick\" onClick={\n          () => \n          {\n            setCount(count+1)\n            setShow(true)\n\n            const dog = {\"name\":\"Dog1\", \"count\":1};\n            console.log(JSON.stringify(dog))\n            fetch('/dog', {\n              method: 'POST',\n              headers: { \"Content-Type\": \"text/json\"},\n              body: JSON.stringify(dog)\n            })\n          }\n        }>\n          <div \n            className={show ? 'Woof' : 'Woof hide'}\n            onTransitionEnd={() => {\n              setShow(false)\n            }\n            }\n          >\n            Woof!\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}